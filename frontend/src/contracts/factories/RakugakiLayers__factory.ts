/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  RakugakiLayers,
  RakugakiLayersInterface,
} from "../RakugakiLayers";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "addImage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getLayer",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct RakugakiLayer",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class RakugakiLayers__factory {
  static readonly abi = _abi;
  static createInterface(): RakugakiLayersInterface {
    return new Interface(_abi) as RakugakiLayersInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): RakugakiLayers {
    return new Contract(address, _abi, runner) as unknown as RakugakiLayers;
  }
}
